{"version":3,"sources":["components/Friends/Friends.module.scss","components/Common/Paginator/Paginator.module.scss","components/Common/Paginator/Paginator.tsx","components/Friends/Friend.tsx","components/Friends/Friends.tsx","redux/selectors/users-selector.ts","components/Friends/FriendsContainer.tsx"],"names":["module","exports","Paginator","portionSize","totalItems","pageSize","currentPage","onPageClick","pageCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","styles","paginator","Button","handleClick","name","pageWrapper","filter","p","map","key","cn","activePage","paginator__page","onClick","Friend","user","props","user__avaToggleName","avaToggleName","avaToggleName__ava","to","id","alt","img","src","photos","small","withPhoto","avaToggleName__name","avaToggleName__toggle","followed","forDisabled","followingInProgress","some","unfollow","follow","user__status","status","Friends","totalUsers","isFetching","users","users__paginator","users__items","Preloader","getUsersFromState","state","friendsPage","getPageSizeFromState","getTotalUsersFromState","getCurrentPageFromState","getIsFetchingFromState","getFollowingInProgressFromState","FriendsContainer","pageNum","getUsers","this","React","Component","compose","connect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,IAAM,qBAAqB,MAAQ,uBAAuB,KAAO,sBAAsB,oBAAsB,qCAAqC,aAAe,8BAA8B,mBAAqB,oCAAoC,oBAAsB,uC,oBCAhSD,EAAOC,QAAU,CAAC,gBAAkB,mCAAmC,YAAc,+BAA+B,WAAa,gC,+KC+ClHC,EAlCoB,SAAC,GAIhC,IAJuG,IAAD,IAArEC,mBAAqE,MAAvD,EAAuD,EAApDC,EAAoD,EAApDA,WAAYC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,YAEjFC,EAAYC,KAAKC,KAAKN,EAAaC,GACjCM,EAAQ,GACLC,EAAI,EAAGA,GAAKJ,EAAWI,IAC5BD,EAAME,KAAKD,GAGf,IAAME,EAAeL,KAAKC,KAAKF,EAAYL,GAR2D,EAS5DY,mBAAS,GATmD,mBAS/FC,EAT+F,KAShFC,EATgF,KAUhGC,GAAyBF,EAAgB,GAAKb,EAAc,EAC5DgB,EAAyBH,EAAgBb,EAG/C,OAAO,yBAAKiB,UAAWC,IAAOC,WACzBN,EAAgB,GAAK,kBAACO,EAAA,EAAD,CAAQC,YAAa,kBAAMP,EAAiBD,EAAgB,IAAIS,KAAM,SAC5F,yBAAKL,UAAWC,IAAOK,aAEff,EACKgB,QAAO,SAAAC,GAAC,OAAIA,GAAKV,GAAyBU,GAAKT,KAC/CU,KAAI,SAAAD,GACD,OAAO,0BAAME,IAAKF,EAAGR,UAAWW,IAAG,eAC9BV,IAAOW,WAAa1B,IAAgBsB,GACtCP,IAAOY,iBAAkBC,QAAS,WACjC3B,EAAYqB,KACZA,OAKnBd,EAAeE,GAChB,kBAACO,EAAA,EAAD,CAAQC,YAAa,kBAAMP,EAAiBD,EAAgB,IAAIS,KAAM,W,gCCE/DU,EAhCA,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,KAASC,EAAkB,wBACxC,OACI,yBAAKjB,UAAWC,IAAOe,MACnB,yBAAKhB,UAAWW,IAAGV,IAAOiB,oBAAqBjB,IAAOkB,gBAClD,yBAAKnB,UAAWC,IAAOmB,oBACnB,kBAAC,IAAD,CAASC,GAAE,mBAAcL,EAAKM,KAC1B,yBAAMC,IAAI,aAAavB,UAAWC,IAAOuB,IAAKC,IAAKT,EAAKU,OAAOC,OAASC,QAGhF,yBAAK5B,UAAWC,IAAO4B,qBAAsBb,EAAKX,MAClD,yBAAKL,UAAWC,IAAO6B,uBAEfd,EAAKe,SAED,kBAAC5B,EAAA,EAAD,CAAQ6B,YAAaf,EAAMgB,oBAAoBC,MAAK,SAAAZ,GAAE,OAAIA,IAAON,EAAKM,MAC9DlB,YAAa,WACTa,EAAMkB,SAASnB,EAAKM,KACrBjB,KAAM,YAEjB,kBAACF,EAAA,EAAD,CAAQ6B,YAAaf,EAAMgB,oBAAoBC,MAAK,SAAAZ,GAAE,OAAIA,IAAON,EAAKM,MAC9DlB,YAAa,WACTa,EAAMmB,OAAOpB,EAAKM,KACnBjB,KAAM,aAIjC,yBAAKL,UAAWC,IAAOoC,cACnB,yBAAKrC,UAAWC,IAAOqC,QAAQ,uCAAgBtB,EAAKsB,W,QCHrDC,EAnBkB,SAAC,GAAgH,IAA/GC,EAA8G,EAA9GA,WAAYvD,EAAkG,EAAlGA,SAAUC,EAAwF,EAAxFA,YAAaC,EAA2E,EAA3EA,YAAasD,EAA8D,EAA9DA,WAAYC,EAAkD,EAAlDA,MAAOP,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,OAAQH,EAAyB,EAAzBA,oBACpH,OACI,yBAAKjC,UAAWC,IAAOyC,OACnB,yBAAK1C,UAAWC,IAAO0C,kBACnB,kBAAC,EAAD,CAAW3D,WAAYwD,EAAYvD,SAAUA,EAAUC,YAAaA,EACzDC,YAAaA,KAE5B,yBAAKa,UAAWC,IAAO2C,cAClBH,EAAa,kBAACI,EAAA,EAAD,MACVH,EAAMjC,KAAI,SAAAO,GAAI,OAAI,kBAAC,EAAD,CAAQmB,SAAUA,EACVC,OAAQA,EACRH,oBAAqBA,EACrBjB,KAAMA,EACNN,IAAKM,EAAKM,W,gBC/B3CwB,EAAoB,SAACC,GAAD,OAAsBA,EAAMC,YAAYN,OAE5DO,EAAuB,SAACF,GAAD,OAAsBA,EAAMC,YAAY/D,UAE/DiE,EAAyB,SAACH,GAAD,OAAsBA,EAAMC,YAAYR,YAEjEW,EAA0B,SAACJ,GAAD,OAAsBA,EAAMC,YAAY9D,aAElEkE,EAAyB,SAACL,GAAD,OAAsBA,EAAMC,YAAYP,YAEjEY,EAAkC,SAACN,GAAD,OAAsBA,EAAMC,YAAYf,qBCqBjFqB,E,4MAMFnE,YAAc,SAACoE,GACX,EAAKtC,MAAMuC,SAAS,EAAKvC,MAAMhC,SAAUsE,I,kEAJzCE,KAAKxC,MAAMuC,SAASC,KAAKxC,MAAMhC,SAAUwE,KAAKxC,MAAM/B,e,+BAQpD,OACI,oCACK,kBAAC,EAAD,CACGsD,WAAYiB,KAAKxC,MAAMuB,WACvBvD,SAAUwE,KAAKxC,MAAMhC,SACrByD,MAAOe,KAAKxC,MAAMyB,MAClBxD,YAAauE,KAAKxC,MAAM/B,YACxBiD,SAAUsB,KAAKxC,MAAMkB,SACrBC,OAAQqB,KAAKxC,MAAMmB,OACnBK,WAAYgB,KAAKxC,MAAMwB,WACvBtD,YAAasE,KAAKtE,YAClB8C,oBAAqBwB,KAAKxC,MAAMgB,2B,GAtBrByB,IAAMC,WAuCtBC,sBACXC,aAZoB,SAACd,GACrB,MAAO,CACHL,MAAOI,EAAkBC,GACzB9D,SAAUgE,EAAqBF,GAC/BP,WAAYU,EAAuBH,GACnC7D,YAAaiE,EAAwBJ,GACrCN,WAAYW,EAAuBL,GACnCd,oBAAqBoB,EAAgCN,MAKiB,CAACS,aAAUpB,WAAQD,eADlFyB,CAEbN","file":"static/js/3.a7b09e72.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Friends_img__2U_2I\",\"users\":\"Friends_users__640x7\",\"user\":\"Friends_user__2BR4M\",\"user__avaToggleName\":\"Friends_user__avaToggleName__1FiPn\",\"user__status\":\"Friends_user__status__2LCzv\",\"avaToggleName__ava\":\"Friends_avaToggleName__ava__vGU-k\",\"avaToggleName__name\":\"Friends_avaToggleName__name__IioEB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator__page\":\"Paginator_paginator__page__2M7Qh\",\"pageWrapper\":\"Paginator_pageWrapper__2wy4J\",\"activePage\":\"Paginator_activePage__3wooE\"};","import styles from './Paginator.module.scss'\r\nimport React, {useState} from 'react'\r\nimport cn from 'classnames'\r\nimport Button from '../Button/Button'\r\n\r\ntype Props = {\r\n    portionSize?: number\r\n    totalItems: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageClick: (p: number) => void\r\n}\r\n\r\n\r\nconst Paginator: React.FC<Props> = ({portionSize = 5, totalItems, pageSize, currentPage, onPageClick}) => {\r\n\r\n    let pageCount = Math.ceil(totalItems / pageSize)\r\n    const pages = []\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pageCount / portionSize)\r\n    const [portionNumber, setPortionNumber] = useState(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 && <Button handleClick={() => setPortionNumber(portionNumber - 1)} name={'Prev'}/>}\r\n        <div className={styles.pageWrapper}>\r\n            {\r\n                pages\r\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map(p => {\r\n                        return <span key={p} className={cn({\r\n                            [styles.activePage]: currentPage === p\r\n                        }, styles.paginator__page)} onClick={() => {\r\n                            onPageClick(p)\r\n                        }}>{p}</span>\r\n                    })\r\n            }\r\n        </div>\r\n\r\n        {portionCount > portionNumber &&\r\n        <Button handleClick={() => setPortionNumber(portionNumber + 1)} name={'Next'}/>}\r\n    </div>\r\n}\r\nexport default Paginator","import React from 'react'\r\nimport styles from './Friends.module.scss'\r\nimport {NavLink} from 'react-router-dom'\r\nimport withPhoto from './../../assets/unnamed.jpg'\r\nimport {UserType} from '../../types/types'\r\nimport Button from '../Common/Button/Button'\r\nimport cn from 'classnames'\r\n\r\ntype Props = {\r\n    user: UserType\r\n    followingInProgress: Array<number>\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\n\r\nconst Friend = ({user, ...props}: Props) => {\r\n    return (\r\n        <div className={styles.user}>\r\n            <div className={cn(styles.user__avaToggleName, styles.avaToggleName)}>\r\n                <div className={styles.avaToggleName__ava}>\r\n                    <NavLink to={`/profile/${user.id}`}>\r\n                        <img  alt='user photo' className={styles.img} src={user.photos.small || withPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={styles.avaToggleName__name}>{user.name}</div>\r\n                <div className={styles.avaToggleName__toggle}>\r\n                    {\r\n                        user.followed\r\n                            ?\r\n                            <Button forDisabled={props.followingInProgress.some(id => id === user.id)}\r\n                                    handleClick={() => {\r\n                                        props.unfollow(user.id)\r\n                                    }} name={'Unfollw'}/>\r\n                            :\r\n                            <Button forDisabled={props.followingInProgress.some(id => id === user.id)}\r\n                                    handleClick={() => {\r\n                                        props.follow(user.id)\r\n                                    }} name={'Follow'}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={styles.user__status}>\r\n                <div className={styles.status}><b>Status: </b>{user.status}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Friend\r\n","import React from 'react'\r\nimport styles from './Friends.module.scss'\r\nimport Paginator from '../Common/Paginator/Paginator'\r\nimport Friend from './Friend'\r\nimport Preloader from '../Common/Preloader/Preloader'\r\nimport {UserType} from '../../types/types'\r\n\r\ntype Props = {\r\n    totalUsers: number\r\n    pageSize: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n\r\n    onPageClick: (pageNum: number) => void\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\n\r\nconst Friends: React.FC<Props> = ({totalUsers, pageSize, currentPage, onPageClick, isFetching, users, unfollow, follow, followingInProgress}) => {\r\n    return (\r\n        <div className={styles.users}>\r\n            <div className={styles.users__paginator}>\r\n                <Paginator totalItems={totalUsers} pageSize={pageSize} currentPage={currentPage}\r\n                           onPageClick={onPageClick}/>\r\n            </div>\r\n            <div className={styles.users__items}>\r\n                {isFetching ? <Preloader/> :\r\n                    users.map(user => <Friend unfollow={unfollow}\r\n                                              follow={follow}\r\n                                              followingInProgress={followingInProgress}\r\n                                              user={user}\r\n                                              key={user.id}/>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Friends\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {AppState} from '../redux-store'\r\n\r\nexport const getUsersFromState = (state: AppState) => (state.friendsPage.users)\r\n\r\nexport const getPageSizeFromState = (state: AppState) => (state.friendsPage.pageSize)\r\n\r\nexport const getTotalUsersFromState = (state: AppState) => (state.friendsPage.totalUsers)\r\n\r\nexport const getCurrentPageFromState = (state: AppState) => (state.friendsPage.currentPage)\r\n\r\nexport const getIsFetchingFromState = (state: AppState) => (state.friendsPage.isFetching)\r\n\r\nexport const getFollowingInProgressFromState = (state: AppState) => (state.friendsPage.followingInProgress)\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Friends from './Friends'\r\nimport {follow, getUsers, unfollow} from '../../redux/friendsPage-reducer'\r\nimport {compose} from 'redux'\r\nimport {\r\n    getCurrentPageFromState,\r\n    getFollowingInProgressFromState,\r\n    getIsFetchingFromState,\r\n    getPageSizeFromState,\r\n    getTotalUsersFromState,\r\n    getUsersFromState\r\n} from '../../redux/selectors/users-selector'\r\nimport {UserType} from '../../types/types'\r\nimport {AppState} from '../../redux/redux-store'\r\n\r\ntype MapStateProps = {\r\n    users: Array<UserType>\r\n    totalUsers: number\r\n    pageSize: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n}\r\n\r\ntype MapDispatchProps = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    getUsers: (pageSize: number, currentPage: number) => void\r\n}\r\n\r\ntype Props = MapStateProps & MapDispatchProps\r\n\r\nclass FriendsContainer extends React.Component<Props> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.pageSize, this.props.currentPage)\r\n    }\r\n\r\n    onPageClick = (pageNum: number) => {\r\n        this.props.getUsers(this.props.pageSize, pageNum)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {<Friends\r\n                    totalUsers={this.props.totalUsers}\r\n                    pageSize={this.props.pageSize}\r\n                    users={this.props.users}\r\n                    currentPage={this.props.currentPage}\r\n                    unfollow={this.props.unfollow}\r\n                    follow={this.props.follow}\r\n                    isFetching={this.props.isFetching}\r\n                    onPageClick={this.onPageClick}\r\n                    followingInProgress={this.props.followingInProgress}/>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): MapStateProps => {\r\n    return {\r\n        users: getUsersFromState(state),\r\n        pageSize: getPageSizeFromState(state),\r\n        totalUsers: getTotalUsersFromState(state),\r\n        currentPage: getCurrentPageFromState(state),\r\n        isFetching: getIsFetchingFromState(state),\r\n        followingInProgress: getFollowingInProgressFromState(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect<MapStateProps, MapDispatchProps, null, AppState>(mapStateToProps, {getUsers, follow, unfollow})\r\n)(FriendsContainer)"],"sourceRoot":""}