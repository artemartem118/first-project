{"version":3,"sources":["API/api.js","assets/unnamed.jpg","Utils/helpers/object-helper.js","redux/friendsPage-reducer.js","components/Dialogs/Message/Message.module.css","components/profile/Profile.module.css","assets/7677edd5a44b10130b8824ca020ba60b.gif","components/profile/wall/Wall.module.css","components/Navbar/NavBar.module.css","components/Common/Forms/Forms.module.css","serviceWorker.js","redux/auth-reducer.js","redux/profilePage-reducer.js","redux/sidebar-reducer.js","redux/dialogsPage-reducer.js","redux/App-reducer.js","redux/redux-store.js","components/Navbar/NavBar.jsx","components/News/News.jsx","components/Dialogs/DialogsItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Common/Forms/Forms.js","Utils/validators/validators.js","components/Dialogs/SendMessege/SendMessage.jsx","components/Dialogs/Dialogs.jsx","components/HOC/WithAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/profile/ProfileInfo/ProfileDataForm.js","components/profile/ProfileInfo/ProfileInfo.jsx","components/profile/wall/Post/Post.jsx","components/profile/wall/Send/Send.jsx","components/profile/wall/Wall.jsx","components/profile/wall/WallContainer.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.js","index.js","components/Dialogs/DialogsItem/DialogsItem.module.css","components/profile/wall/Post/Post.module.css","components/Dialogs/Dialogs.module.css","components/profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Common/Preloader/Preloader.jsx","components/Dialogs/SendMessege/SendMessage.module.css","components/profile/wall/Send/Send.module.css"],"names":["instance","axios","baseURL","withCredentials","headers","friendsAPI","getUsers","pageSize","pageNum","get","then","response","data","unfollow","userId","delete","follow","post","profileAPI","getProfile","getStatus","updateStatus","status","put","savePhoto","photo","formData","FormData","append","saveProfile","authAPI","setProfileData","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptcha","module","exports","updateObjectInArray","items","itemProp","requiredProp","newObj","map","item","FOLLOW","UNFOLLOW","initialState","users","totalUsers","currentPage","isFetching","followingInProgress","followAccess","id","type","unfollowAccess","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingInProgress","dispatch","a","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","bind","friendsPageReducer","state","action","followed","filter","Boolean","window","location","hostname","match","isAuth","captchaUrl","setUserDataAccess","payload","setCaptchaSuccess","setUserData","url","authReducer","ADD_POST","postsData","message","counterLike","userProfile","userStatus","setUserStatus","getUser","user","profilePageReducer","newPost","photos","sideBarReducer","messagesData","dialogsData","name","dialogsPageReducer","newMessage","textMess","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","sideBar","friendsPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunk","Nav","className","c","nav","to","activeClassName","active","News","DialogItem","props","classes","dialog","pic","img","src","dlink","link","lastmessage","Message","messageMY","Textarea","input","meta","error","touched","hasError","styles","formControl","Input","required","value","maxLength","num","length","maxLength30","SendMessageForm","reduxForm","onSubmit","handleSubmit","text","Field","component","validate","placeholder","btn","Send","addMessageWrapper","addMessage","Dialogs","dialogsElement","d","key","messagesElement","m","dialogs_wrapper","dialogs","messages","sendmessage","mapStateToProps","compose","Component","connect","ProfileStatusWithHooks","useState","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatusUser","ReduxProfileDataFormForm","profile","formLoginError","Object","keys","contacts","ifOwner","onClick","editModeOn","ProfileData","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","title","Contact","contact","ProfileInfo","Preloader","profileInfoWrapper","picture","large","withPhoto","alt","target","files","info","initialValues","Post","React","memo","like","ReduxLoginForm","addPostsWrapper","addPost","messageText","Wall","postsElement","p","posts","Profile","profileWrapper","WallContainer","ProfileContainer","this","params","history","push","getStatusUser","refreshProfile","prevProps","prevState","snapshot","getState","stopSubmit","_error","Promise","reject","withRouter","Header","header","tect","HeaderContainer","logoutUser","loginUser","FriendsContainer","lazy","App","initializeApp","NavBar","fallback","path","render","DialogsContainer","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","preloader"],"mappings":"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","file":"static/js/main.c415244d.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    withCredentials: true,\r\n    headers: {\"API-KEY\": \"02b9c283-65ab-4aa6-9c25-cf1f7a717d1b\"}\r\n});\r\n\r\nexport const friendsAPI = {\r\n    getUsers( pageSize ,pageNum ) {\r\n       return instance.get(`users?count=${pageSize}&page=${pageNum}`).then(response => response.data)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`);\r\n    },\r\n};\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile( userId ) {\r\n        return instance.get('profile/' + userId)\r\n    },\r\n    getStatus( userId ) {\r\n        return instance.get('profile/status/' + userId)\r\n    },\r\n    updateStatus( status ) {\r\n        return instance.put('profile/status/', { status })\r\n    },\r\n    savePhoto ( photo ) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\" , photo);\r\n        return instance.put('/profile/photo', formData, {\r\n            headers:{\r\n            \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        })\r\n    },\r\n    saveProfile(formData) {\r\n        return instance.put('profile', formData)\r\n    }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    setProfileData() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    logout(data) {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\nexport const securityAPI = {\r\n    getCaptcha() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    },\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/unnamed.11fdd540.jpg\";","export const updateObjectInArray = (items, itemProp, requiredProp, newObj) => {\r\n    return items.map(item => {\r\n        if (item[itemProp] === requiredProp) {\r\n            return {...item, ...newObj};\r\n        }\r\n        return item;\r\n    })\r\n}\r\n","import {friendsAPI} from \"../API/api\";\r\nimport {updateObjectInArray} from \"../Utils/helpers/object-helper\";\r\n\r\nconst FOLLOW = 'friends/FOLLOW';\r\nconst UNFOLLOW = 'friends/UNFOLLOW';\r\nconst SET_USERS = 'friends/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'friends/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'friends/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'friends/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'friends/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsers: 1,\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n\r\n};\r\n\r\n\r\nconst friendsPageReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, \"id\", action.id, {followed: true})\r\n            }\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, \"id\", action.id, {followed: false})\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage,\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsers: action.totalUsers,\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(userId => userId !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const followAccess = id => ({type: FOLLOW, id});\r\n\r\nexport const unfollowAccess = id => ({type: UNFOLLOW, id});\r\n\r\nexport const setUsers = users => ({type: SET_USERS, users});\r\n\r\nexport const setCurrentPage = currentPage => ({type: SET_CURRENT_PAGE, currentPage});\r\n\r\nexport const setTotalUsersCount = totalUsers => ({type: SET_TOTAL_USERS_COUNT, totalUsers});\r\nexport const toggleIsFetching = isFetching => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingInProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\n\r\nexport const getUsers = (pageSize = 10, pageNum = 1) => {\r\n\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(pageNum));\r\n\r\n        const data = await friendsAPI.getUsers(pageSize, pageNum);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n\r\n    const response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingInProgress(false, userId));\r\n}\r\nexport const unfollow = userId => {\r\n\r\n    return dispatch => {\r\n\r\n        followUnfollowFlow(dispatch, userId, friendsAPI.unfollow.bind(friendsAPI), unfollowAccess);\r\n    }\r\n}\r\nexport const follow = userId => {\r\n    return dispatch => {\r\n\r\n        followUnfollowFlow(dispatch, userId, friendsAPI.follow.bind(friendsAPI), followAccess);\r\n    }\r\n}\r\n\r\n\r\nexport default friendsPageReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageMY\":\"Message_messageMY__3kU4V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrapper\":\"Profile_profileWrapper__2Fu6A\"};","module.exports = __webpack_public_path__ + \"static/media/7677edd5a44b10130b8824ca020ba60b.1a7925ff.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Wall_posts__2yDsb\",\"item\":\"Wall_item__1YHO2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__3PWUU\",\"item\":\"NavBar_item__1Jc93\",\"active\":\"NavBar_active__15DDA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Forms_formControl__13Wqr\",\"error\":\"Forms_error__2U300\",\"formLoginError\":\"Forms_formLoginError__WD70-\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {authAPI, securityAPI} from \"../API/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATE = 'auth/SET_USER_DATE';\r\nconst SET_CAPTCHA = 'auth/SET_CAPTCHA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    captchaUrl: null,\r\n};\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATE:\r\n        case SET_CAPTCHA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setUserDataAccess = (id, login, email, isAuth) => ({\r\n    type: SET_USER_DATE,\r\n    payload: {id, login, email, isAuth}\r\n});\r\nexport const setCaptchaSuccess = (captchaUrl) => ({\r\n    type: SET_CAPTCHA,\r\n    payload: {captchaUrl}\r\n});\r\n\r\n\r\nexport const setUserData = () => async dispatch => {\r\n    const response = await authAPI.setProfileData();\r\n    if (response.data.resultCode === 0) {\r\n        const {id, login, email} = response.data.data;\r\n        dispatch(setUserDataAccess(id, login, email, true))\r\n    }\r\n}\r\n\r\nexport const loginUser = (email, password, rememberMe, captcha) => async dispatch => {\r\n    const response = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptcha());\r\n        }\r\n        const message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n        dispatch(stopSubmit(\"login\", {_error: message}))\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => async (dispatch) => {\r\n    const response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserDataAccess(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport const getCaptcha = () => async dispatch => {\r\n    const response = await securityAPI.getCaptcha();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(setCaptchaSuccess(captchaUrl));\r\n}\r\n\r\nexport default authReducer;","import {profileAPI} from \"../API/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getCaptcha} from \"./auth-reducer\";\r\n\r\nconst ADD_POST = \"profile/ADD-POST\";\r\nconst SET_USER_PROFILE = \"profile/SET_USER_PROFILE\";\r\nconst SET_STATUS = \"profile/SET_STATUS\"\r\nconst SET_PHOTO = \"profile/SET_PHOTO\"\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {id: 1, message: \"i dont know\", counterLike: 2},\r\n        {id: 2, message: \"what?\", counterLike: 1}\r\n    ],\r\n    userProfile: null,\r\n    userStatus: \"\",\r\n\r\n};\r\n\r\n\r\nconst profilePageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            const newPost = {\r\n                id: 5,\r\n                message: action.newPost,\r\n                counterLike: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                userProfile: action.user\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                userStatus: action.status\r\n            };\r\n        }\r\n        case SET_PHOTO: {\r\n            return {\r\n                ...state,\r\n                userProfile: {...state.userProfile, photos: action.photos}\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport const addPost = newPost => ({type: ADD_POST, newPost});\r\n\r\nexport const setUserProfile = user => ({type: SET_USER_PROFILE, user});\r\n\r\nexport const setUserStatus = status => ({type: SET_STATUS, status});\r\nexport const savePhotoSuccess = photos => ({type: SET_PHOTO, photos});\r\n\r\n\r\nexport const getUser = userId => {\r\n    return async dispatch => {\r\n\r\n        const response = await profileAPI.getProfile(userId);\r\n        dispatch(setUserProfile(response.data));\r\n    }\r\n};\r\n\r\nexport const getStatusUser = userId => {\r\n    return async dispatch => {\r\n        const response = await profileAPI.getStatus(userId);\r\n        dispatch(setUserStatus(response.data));\r\n    };\r\n};\r\nexport const updateStatusUser = status => {\r\n    return async dispatch => {\r\n        const response = await profileAPI.updateStatus(status);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUserStatus(status));\r\n        }\r\n    }\r\n};\r\n\r\nexport const savePhoto = photo => async dispatch => {\r\n    const response = await profileAPI.savePhoto(photo);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos))\r\n    }\r\n}\r\nexport const saveProfile = formData => async (dispatch, getState) => {\r\n    const id = getState().auth.id;\r\n    const response = await profileAPI.saveProfile(formData);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUser(id));\r\n    } else {\r\n        const message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"profileDataForm\", {_error: message}));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\n\r\nexport default profilePageReducer;","let initialState = {\r\n\r\n};\r\n\r\nconst sideBarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\n\r\nexport default sideBarReducer;\r\n","const ADD_MESSAGE = 'dialogs/ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    messagesData: [\r\n        {id: 1, message: 'AVADA KEDAVRA'},\r\n        {id: 2, message: 'EXPILARMUS'},\r\n        {id: 3, message: 'FLEPENDO'},\r\n        {id: 4, message: 'VINGARDIUM LEVIOSSA'},\r\n        {id: 5, message: 'bukla'},\r\n    ],\r\n    dialogsData: [\r\n        {id: 1, name: 'Albus'},\r\n        {id: 2, name: 'Harry'},\r\n        {id: 3, name: 'Germiona'},\r\n    ],\r\n};\r\n\r\n\r\nconst dialogsPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            const newMessage = {\r\n                id: 6,\r\n                message: action.textMess,\r\n            }\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, newMessage],\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const addMessage = (textMess) => ({type: ADD_MESSAGE, textMess});\r\n\r\n\r\nexport default dialogsPageReducer;","import {setUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS';\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setInitializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS,\r\n});\r\n\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    await dispatch(setUserData());\r\n    dispatch(setInitializedSuccess());\r\n}\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profilePageReducer from \"./profilePage-reducer\";\r\nimport sideBarReducer from \"./sidebar-reducer\";\r\nimport dialogsPageReducer from \"./dialogsPage-reducer\";\r\nimport friendsPageReducer from \"./friendsPage-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport appReducer from \"./App-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    dialogsPage: dialogsPageReducer,\r\n    sideBar: sideBarReducer,\r\n    friendsPage: friendsPageReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport c from './NavBar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav className={c.nav}>\r\n            <div className={c.item}>\r\n                <NavLink to='/profile' activeClassName={c.active} >profile</NavLink>\r\n            </div>\r\n\r\n            <div className={c.item}>\r\n                <NavLink to='/news' activeClassName={c.active} >news</NavLink>\r\n            </div>\r\n\r\n            <div className={c.item}>\r\n                <NavLink to='/dialogs' activeClassName={c.active} >dialogs</NavLink>\r\n            </div>\r\n\r\n            <div className={c.item}>\r\n                <NavLink to='/friends' activeClassName={c.active} >friends</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\nexport default Nav;","import React from \"react\";\r\nimport classes from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                News\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default News;","import classes from \"./DialogsItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    return (\r\n        <div className={classes.dialog} >\r\n            <div className={classes.pic}><img\r\n                className={classes.img}\r\n                src={'https://avatars.mds.yandex.net/get-zen_doc/1362956/pub_5bf63a4d77663700aaa65737_5bf63cbcd238aa00aac52f5b/scale_1200'}/>\r\n            </div>\r\n            <div className={classes.dlink}>\r\n                <NavLink className={classes.link}\r\n                         to={`/dialogs/${props.id}`}> {props.name} </NavLink>\r\n            </div>\r\n            <div className={classes.lastmessage}>\r\n                last message\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default DialogItem;","import classes from './Message.module.css';\r\nimport React from \"react\";\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className={classes.messageMY}>{props.message}</div>\r\n    );\r\n};\r\nexport default Message;","import React from \"react\";\r\nimport styles from \"./Forms.module.css\"\r\n\r\nexport const Textarea = ({input, meta : {error, touched}, ...props}) => {\r\n\r\n    const hasError = error && touched;\r\n\r\n    return (\r\n      <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n          <div>\r\n              <textarea {...props} {...input} />\r\n          </div>\r\n          {hasError && <span>{error}</span>}\r\n      </div>\r\n    );\r\n}\r\nexport const Input = ({input, meta : {error, touched}, ...props}) => {\r\n\r\n    const hasError = error && touched;\r\n\r\n    return (\r\n      <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n          <div>\r\n              <input {...props} {...input} />\r\n          </div>\r\n          {hasError && <span>{error}</span>}\r\n      </div>\r\n    );\r\n}","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\"\r\n}\r\nexport const maxLength = num => value => {\r\n    if (value.length > num) return `Max lenght is ${num} symbols`;\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport classes from \"./SendMessage.module.css\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../Common/Forms/Forms\";\r\nimport {maxLength, required} from \"../../../Utils/validators/validators\";\r\n\r\n\r\nconst maxLength30 = maxLength(30)\r\n\r\nconst SendMessage = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={classes.text}>\r\n                <Field component={Textarea} name={\"newMessage\"}  validate={[required, maxLength30]} placeholder={'enter'}/>\r\n\r\n            </div>\r\n            <div className={classes.btn}>\r\n                <button >Send message</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst SendMessageForm = reduxForm({form: \"sendMessage\"})(SendMessage);\r\n\r\nconst Send = (props) => {\r\n\r\n\r\n    const onButtonClik = (data) => {\r\n\r\n        props.addMessage(data.newMessage);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.addMessageWrapper}>\r\n            <SendMessageForm onSubmit={onButtonClik} />\r\n        </div>\r\n    );\r\n};\r\nexport default Send;","import React from \"react\";\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogsItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport SendMessage from \"./SendMessege/SendMessage\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    const dialogsElement = props.dialogsPage.dialogsData\r\n        .map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\r\n\r\n    const messagesElement = props.dialogsPage.messagesData\r\n        .map(m => <Message key={m.id} message={m.message}/>);\r\n\r\n\r\n    return (\r\n        <div className={classes.dialogs_wrapper}>\r\n\r\n            <div className={classes.dialogs}>\r\n                {\r\n                    dialogsElement\r\n                }\r\n            </div>\r\n\r\n            <div className={classes.messages}>\r\n                {\r\n                    messagesElement\r\n                }\r\n            </div>\r\n            <div className={classes.sendmessage}>\r\n                <SendMessage\r\n                    addMessage={props.addMessage}/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\nexport default Dialogs;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    const RedirectComponent = (props) => {\r\n        if(!props.isAuth) return <Redirect to={'/login'} />\r\n        return <Component {...props} />\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n\r\n\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {addMessage, updateTextareaMessage} from \"../../redux/dialogsPage-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps ,{addMessage})\r\n)(Dialogs);","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=> {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const onEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const offEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatusUser(status);\r\n    }\r\n\r\n    const onChangeStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={onEditMode}>{props.status || \"---\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onChangeStatus} autoFocus={true} onBlur={offEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import {Field, reduxForm} from \"redux-form\";\r\nimport {Input, Textarea} from \"../../Common/Forms/Forms\";\r\nimport React from \"react\";\r\nimport styles from \"../../Common/Forms/Forms.module.css\";\r\n\r\n\r\n\r\nconst ProfileDataForm = ({profile, ...props}) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        {\r\n            <div className={styles.formLoginError}>{props.error}</div>\r\n        }\r\n        <div><b>Full name</b> <Field name={\"fullName\"}\r\n                                     component={Input} placeholder={\"Full name\"}/></div>\r\n        <div><b>About me</b> <Field name={\"aboutMe\"}\r\n                                    component={Textarea} placeholder={\"About me\"}/></div>\r\n        <div><b>Looking for a job</b><Field name={\"lookingForAJob\"}\r\n                                            type={\"checkbox\"}\r\n                                            component={Input} /></div>\r\n        <div><b>Looking for a job description</b><br/><Field name={\"lookingForAJobDescription\"}\r\n                                                             component={Textarea} placeholder={\"description\"}/></div>\r\n\r\n        <div><b>Contacts:</b> {Object.keys(profile.contacts).map(key => (\r\n            <div>\r\n                <b>{key}</b><Field name={\"contacts.\" + key}\r\n                                   component={Input} placeholder={key}/>\r\n            </div>))} </div>\r\n\r\n        {props.ifOwner && <button onClick={props.editModeOn}> edit</button>}\r\n        <button onClick={ ()=> {} }> save</button>\r\n    </form>\r\n\r\n};\r\nconst ReduxProfileDataFormForm = reduxForm({form: \"profileDataForm\"})(ProfileDataForm)\r\n\r\n\r\nexport default ReduxProfileDataFormForm;\r\n\r\n","import React, {useState} from \"react\";\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport withPhoto from \"./../../../assets/unnamed.jpg\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData)\r\n            .then(() => {\r\n                setEditMode(false)\r\n            });\r\n    }\r\n\r\n    if (!props.userProfile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const changeMainPhoto = (e) => {\r\n        if (e.target.files.length) props.savePhoto(e.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <div className={classes.profileInfoWrapper}>\r\n            <div className={classes.picture}>\r\n                <img src={props.userProfile.photos.large || withPhoto} alt=\"ava\"/>\r\n            </div>\r\n            <div>{props.ifOwner && <input type={\"file\"} onClick={changeMainPhoto}/>}</div>\r\n            <div className={classes.info}>\r\n\r\n\r\n                <b>Status:</b><ProfileStatusWithHooks status={props.status} updateStatusUser={props.updateStatusUser}/>\r\n\r\n                {editMode ? <ProfileDataForm initialValues={props.userProfile} onSubmit={onSubmit}\r\n                                             profile={props.userProfile}/> :\r\n                    <ProfileData editModeOn={() => {\r\n                        setEditMode(true)\r\n                    }} profile={props.userProfile} ifOwner={props.ifOwner}/>}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ProfileData = ({profile, ...props}) => {\r\n    return <div>\r\n        <div><b>Full name</b> {profile.fullName}</div>\r\n        <div><b>About me</b> {profile.aboutMe}</div>\r\n        <div><b>Looking for a job</b>{profile.lookingForAJob && profile.lookingForAJob ? \" Yes\" : \" No\"}</div>\r\n        <div><b>Looking for a job description</b><br/>{profile.lookingForAJobDescription}</div>\r\n        <div><b>Contacts:</b> {Object.keys(profile.contacts).map(key => (\r\n            <Contact title={key} value={profile.contacts[key]} key={key}/>))} </div>\r\n        {props.ifOwner && <button onClick={props.editModeOn}> edit</button>}\r\n    </div>\r\n\r\n};\r\n\r\n\r\nconst Contact = ({title, value}) => {\r\n    return <div className={classes.contact}><b>{title}</b>{value}</div>\r\n}\r\n// {\r\n//     \"aboutMe\": null,\r\n//     \"contacts\": {\r\n//     \"facebook\": null,\r\n//         \"website\": null,\r\n//         \"vk\": null,\r\n//         \"twitter\": null,\r\n//         \"instagram\": null,\r\n//         \"youtube\": null,\r\n//         \"github\": null,\r\n//         \"mainLink\": null\r\n// },\r\n//     \"lookingForAJob\": false,\r\n//     \"lookingForAJobDescription\": null,\r\n//     \"fullName\": \"artemartem\",\r\n//     \"userId\": 8227,\r\n//     \"photos\": {\r\n//     \"small\": \"https://social-network.samuraijs.com/activecontent/images/users/8227/user-small.jpg?v=6\",\r\n//         \"large\": \"https://social-network.samuraijs.com/activecontent/images/users/8227/user.jpg?v=6\"\r\n// }\r\n// }\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport classes from './Post.module.css';\r\n\r\n\r\nconst Post = React.memo((props) => {\r\n    return (\r\n        <div className={classes.post}>\r\n            <div className={classes.text}>\r\n                <div className={classes.message}>{props.message}</div>\r\n                <div className={classes.like}>like {props.counterLike}</div>\r\n            </div>\r\n            <img className={classes.img}\r\n                 src='https://avatars.mds.yandex.net/get-pdb/214908/5cf679dc-d4ef-43f0-88be-9b2a7fda87d5/s1200?webp=false'/>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Post;","import React from \"react\";\r\nimport classes from \"./Send.module.css\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../../Utils/validators/validators\";\r\nimport {Textarea} from \"../../../Common/Forms/Forms\";\r\n\r\n\r\nconst maxLength30 = maxLength(30);\r\n\r\n\r\nconst SendPost = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={classes.text}>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength30]}\r\n                       placeholder={'enter'} name={'messageText'}/>\r\n\r\n            </div>\r\n            <div className={classes.btn}>\r\n                <button>Add posts</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nconst ReduxLoginForm = reduxForm({form: \"SendPost\"})(SendPost)\r\n\r\n\r\nconst Send = (props) => {\r\n\r\n    const addNewPost = (data) => {\r\n        props.addPost(data.messageText);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.addPostsWrapper}>\r\n            <ReduxLoginForm  onSubmit={addNewPost}/>\r\n        </div>\r\n    );\r\n};\r\nexport default Send;","import React from \"react\";\r\nimport classes from './Wall.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport Send from \"./Send/Send\";\r\n\r\n\r\nconst Wall = (props) => {\r\n    const postsElement = props.profilePage.postsData\r\n        .map(p => <Post key={p.id} message={p.message} counterLike={p.counterLike}/>);\r\n\r\n\r\n    return (\r\n        <div className={classes.posts}>\r\n            <Send\r\n                addPost={props.addPost}\r\n                profilePage={props.profilePage}\r\n            />\r\n\r\n            <div>\r\n                {postsElement}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Wall;","import React from \"react\";\r\nimport Wall from \"./Wall\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {addPost} from \"../../../redux/profilePage-reducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addPost})\r\n)(Wall);","import React from \"react\";\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport WallContainer from \"./wall/WallContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={classes.profileWrapper}>\r\n            <ProfileInfo saveProfile={props.saveProfile} ifOwner={props.ifOwner} savePhoto={props.savePhoto} userProfile={props.userProfile} status={props.status} updateStatusUser={props.updateStatusUser} />\r\n            <WallContainer />\r\n        </div>\r\n    );\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getStatusUser, getUser, savePhoto, updateStatusUser, saveProfile} from \"../../redux/profilePage-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUser(userId);\r\n        this.props.getStatusUser(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        ifOwner={!this.props.match.params.userId}\r\n                        updateStatusUser={this.props.updateStatusUser}\r\n                        userProfile={this.props.userProfile}\r\n                        savePhoto={this.props.savePhoto}\r\n                        saveProfile={this.props.saveProfile}\r\n                        status={this.props.status}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userProfile: state.profilePage.userProfile,\r\n    status: state.profilePage.userStatus,\r\n    userId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n    auth: state.auth,\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUser, getStatusUser, updateStatusUser, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport classes from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img className={classes.img} src={'https://cdn0.iconfinder.com/data/icons/glyphie-1/40/drum_instrument_music_rock-512.png'}/>\r\n            <div className={classes.tect}>вне такта</div>\r\n            <div className={classes.login}>\r\n                {props.auth.isAuth ?\r\n\r\n                    <div>{props.auth.login} <button onClick={props.logout}>Log uot</button> </div>\r\n                    : <NavLink to={'/login'}>login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutUser, setUserData} from \"../../redux/auth-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n\r\n        return <Header logout={this.props.logoutUser}    {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {logoutUser})\r\n)(HeaderContainer)","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginUser} from \"../../redux/auth-reducer\";\r\nimport {Input} from \"../Common/Forms/Forms\";\r\nimport {required} from \"../../Utils/validators/validators\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"../Common/Forms/Forms.module.css\"\r\n\r\n\r\nconst LoginForm = (props) => {\r\n\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"email\"}\r\n                       validate={[required]}\r\n                       component={Input} placeholder={\"email\"}/>\r\n            </div>\r\n            <div>\r\n                <Field name={\"password\"}\r\n                       type={\"password\"}\r\n                       validate={[required]}\r\n                       component={Input} placeholder={\"password\"}/>\r\n            </div>\r\n            <div>\r\n                <Field name={\"rememberMe\"} component={Input} type={\"checkbox\"}/>remember me\r\n            </div>\r\n            {\r\n                <div className={styles.formLoginError}>{props.error}</div>\r\n            }\r\n            {props.captchaUrl && <img src={props.captchaUrl} />}\r\n            {props.captchaUrl &&  <Field name={\"captcha\"}\r\n                                         validate={[required]}\r\n                                         component={Input} placeholder={\"captcha\"}/>}\r\n            <div>\r\n                <button>login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst ReduxLoginForm = reduxForm({form: \"login\"})(LoginForm)\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = ({email, password, rememberMe, captcha}) => {\r\n        props.loginUser(email, password, rememberMe, captcha);\r\n    }\r\n\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div><h2>Login</h2></div>\r\n            <div>\r\n                <ReduxLoginForm captchaUrl={props.captchaUrl} onSubmit={onSubmit}/>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nconst mapStateToProps = state => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl,\r\n})\r\n\r\nexport default connect(mapStateToProps, {loginUser})(Login);","import React, {Suspense} from 'react';\nimport './App.css';\nimport NavBar from \"./components/Navbar/NavBar\";\nimport {Redirect, Route, Switch, withRouter} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport ProfileContainer from \"./components/profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/App-reducer\";\nimport Preloader from \"./components/Common/Preloader/Preloader\";\n\nconst FriendsContainer = React.lazy(() => import('./components/Friends/FriendsContainer'));\n\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) return <Preloader/>\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <NavBar/>\n                <div className='app-wrapper-content'>\n                    <Suspense fallback={<div>Загрузка...</div>}>\n                        <Switch>\n                            <Route path='/Profile/:userId?'\n                                   render={() => <ProfileContainer/>}/>\n\n                            <Route path='/Dialogs'\n                                   render={() => <DialogsContainer/>}/>\n\n                            <Route path='/News' render={() => <News/>}/>\n\n                            <Route path='/Friends' render={() => <FriendsContainer/>}/>\n                            <Route path='/Login' render={() => <Login/>}/>\n                            <Redirect form={\"/\"} to={\"/profile\"}/>\n                        </Switch>\n                    </Suspense>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    initialized: state.app.initialized\n})\n\n\nexport default compose(\n    connect(mapStateToProps, {initializeApp}),\n    withRouter\n)(App);\n","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsItem_dialog__7Ygz5\",\"link\":\"DialogsItem_link__2jHC8\",\"dlink\":\"DialogsItem_dlink__aP42M\",\"lastmessage\":\"DialogsItem_lastmessage__3GlF7\",\"pic\":\"DialogsItem_pic__2iOhy\",\"img\":\"DialogsItem_img__wGwi2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2soWY\",\"text\":\"Post_text__2rccp\",\"massage\":\"Post_massage__27_cS\",\"like\":\"Post_like__1u7dk\",\"img\":\"Post_img__14tma\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_wrapper\":\"Dialogs_dialogs_wrapper__3njWj\",\"dialogs\":\"Dialogs_dialogs__1Jg9j\",\"messages\":\"Dialogs_messages__2UkW5\",\"sendmessage\":\"Dialogs_sendmessage__2RWE2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoWrapper\":\"ProfileInfo_profileInfoWrapper__2YYH_\",\"picture\":\"ProfileInfo_picture__1VNwQ\",\"info\":\"ProfileInfo_info__7TN-m\",\"contact\":\"ProfileInfo_contact__3BDlE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3LAOa\",\"img\":\"Header_img__20Xqr\",\"tect\":\"Header_tect__31Dzj\",\"login\":\"Header_login__loO51\"};","import React from \"react\";\r\nimport preloader  from \"../../../assets/7677edd5a44b10130b8824ca020ba60b.gif\"\r\n\r\nconst Preloader = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <img src={preloader } />\r\n        </div>\r\n    );\r\n}\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addMessageWrapper\":\"SendMessage_addMessageWrapper__12S8A\",\"text\":\"SendMessage_text__1_Tlp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPostsWrapper\":\"Send_addPostsWrapper__MxuqL\",\"text\":\"Send_text__1Vz6E\",\"btn\":\"Send_btn__TXa5M\"};"],"sourceRoot":""}