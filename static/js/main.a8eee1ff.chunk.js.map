{"version":3,"sources":["Utils/helpers/object-helper.js","redux/friendsPage-reducer.js","components/Dialogs/Message/Message.module.css","components/profile/Profile.module.css","assets/7677edd5a44b10130b8824ca020ba60b.gif","assets/DSC07473.jpg","components/profile/wall/Wall.module.css","API/api.js","components/Navbar/NavBar.module.css","serviceWorker.js","redux/profilePage-reducer.js","redux/sidebar-reducer.js","redux/dialogsPage-reducer.js","redux/auth-reducer.js","redux/App-reducer.js","redux/redux-store.js","components/Navbar/NavBar.jsx","components/News/News.jsx","components/Dialogs/DialogsItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Common/Forms/Forms.js","Utils/validators/validators.js","components/Dialogs/SendMessege/SendMessage.jsx","components/Dialogs/Dialogs.jsx","components/HOC/WithAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/profile/ProfileInfo/ProfileInfo.jsx","components/profile/wall/Post/Post.jsx","components/profile/wall/Send/Send.jsx","components/profile/wall/Wall.jsx","components/profile/wall/WallContainer.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.js","index.js","components/Common/Forms/Forms.module.css","components/Dialogs/DialogsItem/DialogsItem.module.css","components/profile/wall/Post/Post.module.css","components/Dialogs/Dialogs.module.css","components/Header/Header.module.css","components/Common/Preloader/Preloader.jsx","components/Dialogs/SendMessege/SendMessage.module.css","components/profile/ProfileInfo/ProfileInfo.module.css","components/profile/wall/Send/Send.module.css"],"names":["updateObjectInArray","items","itemProp","requiredProp","newObj","map","item","FOLLOW","UNFOLLOW","initialState","users","totalUsers","pageSize","currentPage","isFetching","followingInProgress","followAccess","id","type","unfollowAccess","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingInProgress","userId","getUsers","pageNum","dispatch","a","friendsAPI","data","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","unfollow","bind","follow","friendsPageReducer","state","action","followed","filter","module","exports","instance","axios","baseURL","withCredentials","headers","get","then","response","delete","post","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","setProfileData","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","ADD_POST","postsData","message","counterLike","userProfile","userStatus","setUserStatus","profilePageReducer","newPost","user","sideBarReducer","messagesData","dialogsData","name","dialogsPageReducer","newMessage","textMess","isAuth","setUserDataAccess","payload","setUserData","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","sideBar","friendsPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunk","Nav","className","c","nav","to","activeClassName","active","News","DialogItem","props","classes","dialog","pic","img","src","dlink","link","lastmessage","Message","messageMY","Textarea","input","meta","error","touched","hasError","styles","formControl","Input","required","value","maxLength","num","length","maxLength30","SendMessageForm","reduxForm","onSubmit","handleSubmit","text","Field","component","validate","placeholder","btn","Send","addMessageWrapper","addMessage","Dialogs","dialogsElement","d","messagesElement","m","dialogs_wrapper","dialogs","messages","sendmessage","mapStateToProps","compose","Component","connect","ProfileStatusWithHooks","useState","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatusUser","ProfileInfo","profileInfoWrapper","picture","photos","large","dontknow","alt","info","fullName","aboutMe","lookingForAJobDescription","Preloader","Post","React","memo","console","log","like","ReduxLoginForm","addPostsWrapper","addPost","messageText","Wall","postsElement","p","posts","Profile","profileWrapper","WallContainer","ProfileContainer","this","params","history","push","getUser","getStatusUser","withRouter","Header","header","tect","onClick","HeaderContainer","logoutUser","formLoginError","loginUser","stopSubmit","_error","FriendsContainer","lazy","App","initializeApp","NavBar","fallback","path","render","DialogsContainer","rerenderEntireTree","ReactDOM","StrictMode","basename","process","document","getElementById","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","preloader"],"mappings":"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","file":"static/js/main.a8eee1ff.chunk.js","sourcesContent":["export const updateObjectInArray = (items, itemProp, requiredProp, newObj) => {\r\n    return items.map(item => {\r\n        if (item[itemProp] === requiredProp) {\r\n            return {...item, ...newObj};\r\n        }\r\n        return item;\r\n    })\r\n}\r\n","import {friendsAPI} from \"../API/api\";\r\nimport {updateObjectInArray} from \"../Utils/helpers/object-helper\";\r\n\r\nconst FOLLOW = 'friends/FOLLOW';\r\nconst UNFOLLOW = 'friends/UNFOLLOW';\r\nconst SET_USERS = 'friends/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'friends/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'friends/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'friends/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'friends/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsers: 1,\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n\r\n};\r\n\r\n\r\nconst friendsPageReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, \"id\", action.id, {followed: true})\r\n            }\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, \"id\", action.id, {followed: false})\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage,\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsers: action.totalUsers,\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(userId => userId !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const followAccess = id => ({type: FOLLOW, id});\r\n\r\nexport const unfollowAccess = id => ({type: UNFOLLOW, id});\r\n\r\nexport const setUsers = users => ({type: SET_USERS, users});\r\n\r\nexport const setCurrentPage = currentPage => ({type: SET_CURRENT_PAGE, currentPage});\r\n\r\nexport const setTotalUsersCount = totalUsers => ({type: SET_TOTAL_USERS_COUNT, totalUsers});\r\nexport const toggleIsFetching = isFetching => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingInProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\n\r\nexport const getUsers = (pageSize = 10, pageNum = 1) => {\r\n\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(pageNum));\r\n\r\n        const data = await friendsAPI.getUsers(pageSize, pageNum);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n\r\n    const response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingInProgress(false, userId));\r\n}\r\nexport const unfollow = userId => {\r\n\r\n    return dispatch => {\r\n\r\n        followUnfollowFlow(dispatch, userId, friendsAPI.unfollow.bind(friendsAPI), unfollowAccess);\r\n    }\r\n}\r\nexport const follow = userId => {\r\n    return dispatch => {\r\n\r\n        followUnfollowFlow(dispatch, userId, friendsAPI.follow.bind(friendsAPI), followAccess);\r\n    }\r\n}\r\n\r\n\r\nexport default friendsPageReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageMY\":\"Message_messageMY__3kU4V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrapper\":\"Profile_profileWrapper__2Fu6A\"};","module.exports = __webpack_public_path__ + \"static/media/7677edd5a44b10130b8824ca020ba60b.1a7925ff.gif\";","module.exports = __webpack_public_path__ + \"static/media/DSC07473.a96867e4.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Wall_posts__2yDsb\",\"item\":\"Wall_item__1YHO2\"};","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    withCredentials: true,\r\n    headers: {\"API-KEY\": \"02b9c283-65ab-4aa6-9c25-cf1f7a717d1b\"}\r\n});\r\n\r\nexport const friendsAPI = {\r\n    getUsers( pageSize ,pageNum ) {\r\n       return instance.get(`users?count=${pageSize}&page=${pageNum}`).then(response => response.data)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`);\r\n    },\r\n};\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile( userId ) {\r\n        return instance.get('profile/' + userId)\r\n    },\r\n    getStatus( userId ) {\r\n        return instance.get('profile/status/' + userId)\r\n    },\r\n    updateStatus( status ) {\r\n        return instance.put('profile/status/', { status })\r\n    }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    setProfileData() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout(data) {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__3PWUU\",\"item\":\"NavBar_item__1Jc93\",\"active\":\"NavBar_active__15DDA\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {profileAPI} from \"../API/api\";\r\n\r\nconst ADD_POST = \"profile/ADD-POST\";\r\nconst SET_USER_PROFILE = \"profile/SET_USER_PROFILE\";\r\nconst SET_STATUS = \"profile/SET_STATUS\"\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {id: 1, message: \"i dont know\", counterLike: 2},\r\n        {id: 2, message: \"what?\", counterLike: 1}\r\n    ],\r\n    userProfile: null,\r\n    userStatus: \"\",\r\n\r\n};\r\n\r\n\r\nconst profilePageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            const newPost = {\r\n                id: 5,\r\n                message: action.newPost,\r\n                counterLike: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                userProfile: action.user\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                userStatus: action.status\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport const addPost = newPost => ({type: ADD_POST, newPost});\r\n\r\nexport const setUserProfile = user => ({type: SET_USER_PROFILE, user});\r\n\r\nexport const setUserStatus = status => ({type: SET_STATUS, status});\r\n\r\n\r\nexport const getUser = userId => {\r\n    return async dispatch => {\r\n\r\n        const response = await profileAPI.getProfile(userId);\r\n        dispatch(setUserProfile(response.data));\r\n    }\r\n};\r\n\r\nexport const getStatusUser = userId => {\r\n    return async dispatch => {\r\n        const response = await profileAPI.getStatus(userId);\r\n        dispatch(setUserStatus(response.data));\r\n    };\r\n};\r\nexport const updateStatusUser = status => {\r\n    return async dispatch => {\r\n        const response = await profileAPI.updateStatus(status);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUserStatus(status));\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default profilePageReducer;","let initialState = {\r\n\r\n};\r\n\r\nconst sideBarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\n\r\nexport default sideBarReducer;\r\n","const ADD_MESSAGE = 'dialogs/ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    messagesData: [\r\n        {id: 1, message: 'AVADA KEDAVRA'},\r\n        {id: 2, message: 'EXPILARMUS'},\r\n        {id: 3, message: 'FLEPENDO'},\r\n        {id: 4, message: 'VINGARDIUM LEVIOSSA'},\r\n        {id: 5, message: 'bukla'},\r\n    ],\r\n    dialogsData: [\r\n        {id: 1, name: 'Albus'},\r\n        {id: 2, name: 'Harry'},\r\n        {id: 3, name: 'Germiona'},\r\n    ],\r\n};\r\n\r\n\r\nconst dialogsPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            const newMessage = {\r\n                id: 6,\r\n                message: action.textMess,\r\n            }\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, newMessage],\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const addMessage = (textMess) => ({type: ADD_MESSAGE, textMess});\r\n\r\n\r\nexport default dialogsPageReducer;","import {authAPI} from \"../API/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATE = 'auth/SET_USER_DATE';\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n};\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATE: {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setUserDataAccess = (id, login, email, isAuth) => ({\r\n    type: SET_USER_DATE,\r\n    payload: {id, login, email, isAuth}\r\n});\r\n\r\n\r\nexport const setUserData = () => async dispatch => {\r\n    const response = await authAPI.setProfileData();\r\n    if (response.data.resultCode === 0) {\r\n        const {id, login, email} = response.data.data;\r\n        dispatch(setUserDataAccess(id, login, email, true))\r\n    }\r\n}\r\n\r\nexport const loginUser = (email, password, rememberMe) => async dispatch => {\r\n    const response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserData())\r\n    } else {\r\n        const message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n        dispatch(stopSubmit(\"login\", {_error: message}))\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => async (dispatch) => {\r\n    const response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserDataAccess(null, null, null, false));\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","import {setUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS';\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setInitializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS,\r\n});\r\n\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    await dispatch(setUserData());\r\n    dispatch(setInitializedSuccess());\r\n}\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profilePageReducer from \"./profilePage-reducer\";\r\nimport sideBarReducer from \"./sidebar-reducer\";\r\nimport dialogsPageReducer from \"./dialogsPage-reducer\";\r\nimport friendsPageReducer from \"./friendsPage-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport appReducer from \"./App-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profilePageReducer,\r\n    dialogsPage: dialogsPageReducer,\r\n    sideBar: sideBarReducer,\r\n    friendsPage: friendsPageReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport c from './NavBar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav className={c.nav}>\r\n            <div className={c.item}>\r\n                <NavLink to='/profile' activeClassName={c.active} >profile</NavLink>\r\n            </div>\r\n\r\n            <div className={c.item}>\r\n                <NavLink to='/news' activeClassName={c.active} >news</NavLink>\r\n            </div>\r\n\r\n            <div className={c.item}>\r\n                <NavLink to='/dialogs' activeClassName={c.active} >dialogs</NavLink>\r\n            </div>\r\n\r\n            <div className={c.item}>\r\n                <NavLink to='/friends' activeClassName={c.active} >friends</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\nexport default Nav;","import React from \"react\";\r\nimport classes from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                News\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default News;","import classes from \"./DialogsItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    return (\r\n        <div className={classes.dialog} >\r\n            <div className={classes.pic}><img\r\n                className={classes.img}\r\n                src={'https://avatars.mds.yandex.net/get-zen_doc/1362956/pub_5bf63a4d77663700aaa65737_5bf63cbcd238aa00aac52f5b/scale_1200'}/>\r\n            </div>\r\n            <div className={classes.dlink}>\r\n                <NavLink className={classes.link}\r\n                         to={`/dialogs/${props.id}`}> {props.name} </NavLink>\r\n            </div>\r\n            <div className={classes.lastmessage}>\r\n                last message\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default DialogItem;","import classes from './Message.module.css';\r\nimport React from \"react\";\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className={classes.messageMY}>{props.message}</div>\r\n    );\r\n};\r\nexport default Message;","import React from \"react\";\r\nimport styles from \"./Forms.module.css\"\r\n\r\nexport const Textarea = ({input, meta : {error, touched}, ...props}) => {\r\n\r\n    const hasError = error && touched;\r\n\r\n    return (\r\n      <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n          <div>\r\n              <textarea {...props} {...input} />\r\n          </div>\r\n          {hasError && <span>{error}</span>}\r\n      </div>\r\n    );\r\n}\r\nexport const Input = ({input, meta : {error, touched}, ...props}) => {\r\n\r\n    const hasError = error && touched;\r\n\r\n    return (\r\n      <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n          <div>\r\n              <input {...props} {...input} />\r\n          </div>\r\n          {hasError && <span>{error}</span>}\r\n      </div>\r\n    );\r\n}","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\"\r\n}\r\nexport const maxLength = num => value => {\r\n    if (value.length > num) return `Max lenght is ${num} symbols`;\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport classes from \"./SendMessage.module.css\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../Common/Forms/Forms\";\r\nimport {maxLength, required} from \"../../../Utils/validators/validators\";\r\n\r\n\r\nconst maxLength30 = maxLength(30)\r\n\r\nconst SendMessage = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={classes.text}>\r\n                <Field component={Textarea} name={\"newMessage\"}  validate={[required, maxLength30]} placeholder={'enter'}/>\r\n\r\n            </div>\r\n            <div className={classes.btn}>\r\n                <button >Send message</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst SendMessageForm = reduxForm({form: \"sendMessage\"})(SendMessage);\r\n\r\nconst Send = (props) => {\r\n\r\n\r\n    const onButtonClik = (data) => {\r\n\r\n        props.addMessage(data.newMessage);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.addMessageWrapper}>\r\n            <SendMessageForm onSubmit={onButtonClik} />\r\n        </div>\r\n    );\r\n};\r\nexport default Send;","import React from \"react\";\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogsItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport SendMessage from \"./SendMessege/SendMessage\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    const dialogsElement = props.dialogsPage.dialogsData\r\n        .map(d => <DialogItem name={d.name} id={d.id}/>);\r\n\r\n    const messagesElement = props.dialogsPage.messagesData\r\n        .map(m => <Message message={m.message}/>);\r\n\r\n\r\n    return (\r\n        <div className={classes.dialogs_wrapper}>\r\n\r\n            <div className={classes.dialogs}>\r\n                {\r\n                    dialogsElement\r\n                }\r\n            </div>\r\n\r\n            <div className={classes.messages}>\r\n                {\r\n                    messagesElement\r\n                }\r\n            </div>\r\n            <div className={classes.sendmessage}>\r\n                <SendMessage\r\n                    addMessage={props.addMessage}/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\nexport default Dialogs;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    const RedirectComponent = (props) => {\r\n        if(!props.isAuth) return <Redirect to={'/login'} />\r\n        return <Component {...props} />\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n\r\n\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {addMessage, updateTextareaMessage} from \"../../redux/dialogsPage-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps ,{addMessage})\r\n)(Dialogs);","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=> {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const onEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const offEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatusUser(status);\r\n    }\r\n\r\n    const onChangeStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={onEditMode}>{props.status || \"---\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onChangeStatus} autoFocus={true} onBlur={offEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport dontknow from \"../../../assets/DSC07473.jpg\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.userProfile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={classes.profileInfoWrapper}>\r\n            <div className={classes.picture}>\r\n                <img src={props.userProfile.photos.large ? props.userProfile.photos.large : dontknow} alt=\"ava\"/>\r\n            </div>\r\n            <div className={classes.info}>\r\n\r\n                <div>{props.userProfile.fullName}</div>\r\n\r\n                <ProfileStatusWithHooks status={props.status} updateStatusUser={props.updateStatusUser}/>\r\n\r\n                <div>{props.userProfile.aboutMe}</div>\r\n                <div><b>{props.userProfile.lookingForAJobDescription}</b></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport classes from './Post.module.css';\r\n\r\n\r\nconst Post = React.memo((props) => {\r\n    console.log('ae')\r\n    return (\r\n        <div className={classes.post}>\r\n            <div className={classes.text}>\r\n                <div className={classes.message}>{props.message}</div>\r\n                <div className={classes.like}>like {props.counterLike}</div>\r\n            </div>\r\n            <img className={classes.img}\r\n                 src='https://avatars.mds.yandex.net/get-pdb/214908/5cf679dc-d4ef-43f0-88be-9b2a7fda87d5/s1200?webp=false'/>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Post;","import React from \"react\";\r\nimport classes from \"./Send.module.css\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../../Utils/validators/validators\";\r\nimport {Textarea} from \"../../../Common/Forms/Forms\";\r\n\r\n\r\nconst maxLength30 = maxLength(30);\r\n\r\n\r\nconst SendPost = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={classes.text}>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength30]}\r\n                       placeholder={'enter'} name={'messageText'}/>\r\n\r\n            </div>\r\n            <div className={classes.btn}>\r\n                <button>Add posts</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nconst ReduxLoginForm = reduxForm({form: \"SendPost\"})(SendPost)\r\n\r\n\r\nconst Send = (props) => {\r\n\r\n    const addNewPost = (data) => {\r\n        props.addPost(data.messageText);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.addPostsWrapper}>\r\n            <ReduxLoginForm  onSubmit={addNewPost}/>\r\n        </div>\r\n    );\r\n};\r\nexport default Send;","import React from \"react\";\r\nimport classes from './Wall.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport Send from \"./Send/Send\";\r\n\r\n\r\nconst Wall = (props) => {\r\n    const postsElement = props.profilePage.postsData\r\n        .map(p => <Post message={p.message} counterLike={p.counterLike}/>);\r\n\r\n\r\n    return (\r\n        <div className={classes.posts}>\r\n            <Send\r\n                addPost={props.addPost}\r\n                profilePage={props.profilePage}\r\n            />\r\n\r\n            <div>\r\n                {postsElement}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Wall;","import React from \"react\";\r\nimport Wall from \"./Wall\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {addPost} from \"../../../redux/profilePage-reducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addPost})\r\n)(Wall);","import React from \"react\";\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport WallContainer from \"./wall/WallContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={classes.profileWrapper}>\r\n            <ProfileInfo userProfile={props.userProfile} status={props.status} updateStatusUser={props.updateStatusUser} />\r\n            <WallContainer />\r\n        </div>\r\n    );\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getStatusUser, getUser, updateStatusUser} from \"../../redux/profilePage-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUser(userId);\r\n        this.props.getStatusUser(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} updateStatusUser={this.props.updateStatusUser}\r\n                        userProfile={this.props.userProfile} status={this.props.status}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userProfile: state.profilePage.userProfile,\r\n    status: state.profilePage.userStatus,\r\n    userId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n    auth: state.auth,\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUser, getStatusUser, updateStatusUser}),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport classes from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img className={classes.img} src={'https://cdn0.iconfinder.com/data/icons/glyphie-1/40/drum_instrument_music_rock-512.png'}/>\r\n            <div className={classes.tect}>вне такта</div>\r\n            <div className={classes.login}>\r\n                {props.auth.isAuth ?\r\n\r\n                    <div>{props.auth.login} <button onClick={props.logout}>Log uot</button> </div>\r\n                    : <NavLink to={'/login'}>login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutUser, setUserData} from \"../../redux/auth-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n\r\n        return <Header logout={this.props.logoutUser}    {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {logoutUser})\r\n)(HeaderContainer)","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginUser} from \"../../redux/auth-reducer\";\r\nimport {Input} from \"../Common/Forms/Forms\";\r\nimport {required} from \"../../Utils/validators/validators\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"../Common/Forms/Forms.module.css\"\r\n\r\n\r\nconst LoginForm = (props) => {\r\n\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"email\"}\r\n                       validate={[required]}\r\n                       component={Input} placeholder={\"email\"}/>\r\n            </div>\r\n            <div>\r\n                <Field name={\"password\"}\r\n                       type={\"password\"}\r\n                       validate={[required]}\r\n                       component={Input} placeholder={\"password\"}/>\r\n            </div>\r\n            <div>\r\n                <Field name={\"rememberMe\"} component={Input} type={\"checkbox\"}/>remember me\r\n            </div>\r\n            {\r\n                <div className={styles.formLoginError}>{props.error}</div>\r\n            }\r\n            <div>\r\n                <button>login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst ReduxLoginForm = reduxForm({form: \"login\"})(LoginForm)\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = ({email, password, rememberMe}) => {\r\n        props.loginUser(email, password, rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div><h2>Login</h2></div>\r\n            <div>\r\n                <ReduxLoginForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nconst mapStateToProps = state => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {loginUser})(Login);","import React, {Suspense} from 'react';\nimport './App.css';\nimport NavBar from \"./components/Navbar/NavBar\";\nimport {Route, withRouter} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport ProfileContainer from \"./components/profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/App-reducer\";\nimport Preloader from \"./components/Common/Preloader/Preloader\";\n\nconst FriendsContainer = React.lazy(() => import('./components/Friends/FriendsContainer'));\n\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n    render() {\n        if(!this.props.initialized) return <Preloader />\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <NavBar/>\n                <div className='app-wrapper-content'>\n                    <Suspense fallback={<div>Загрузка...</div>}>\n                    <Route path='/Profile/:userId?'\n                           render={() => <ProfileContainer/>}/>\n\n                    <Route path='/Dialogs'\n                           render={() => <DialogsContainer/>}/>\n\n                    <Route path='/News' render={() => <News/>}/>\n\n                    <Route path='/Friends' render={() => <FriendsContainer/>}/>\n                    <Route path='/Login' render={() => <Login/>}/>\n                    </Suspense>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    initialized: state.app.initialized\n})\n\n\nexport default compose(\n    connect(mapStateToProps, {initializeApp}),\n    withRouter\n)(App);\n","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\nconst rerenderEntireTree = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n                <Provider store={store}>\n                    <App/>\n                </Provider>\n            </BrowserRouter>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n\n};\n\nrerenderEntireTree();\n\nstore.subscribe(() => {\n    rerenderEntireTree();\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Forms_formControl__13Wqr\",\"error\":\"Forms_error__2U300\",\"formLoginError\":\"Forms_formLoginError__WD70-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsItem_dialog__7Ygz5\",\"link\":\"DialogsItem_link__2jHC8\",\"dlink\":\"DialogsItem_dlink__aP42M\",\"lastmessage\":\"DialogsItem_lastmessage__3GlF7\",\"pic\":\"DialogsItem_pic__2iOhy\",\"img\":\"DialogsItem_img__wGwi2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2soWY\",\"text\":\"Post_text__2rccp\",\"massage\":\"Post_massage__27_cS\",\"like\":\"Post_like__1u7dk\",\"img\":\"Post_img__14tma\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_wrapper\":\"Dialogs_dialogs_wrapper__3njWj\",\"dialogs\":\"Dialogs_dialogs__1Jg9j\",\"messages\":\"Dialogs_messages__2UkW5\",\"sendmessage\":\"Dialogs_sendmessage__2RWE2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3LAOa\",\"img\":\"Header_img__20Xqr\",\"tect\":\"Header_tect__31Dzj\",\"login\":\"Header_login__loO51\"};","import React from \"react\";\r\nimport preloader  from \"../../../assets/7677edd5a44b10130b8824ca020ba60b.gif\"\r\n\r\nconst Preloader = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <img src={preloader } />\r\n        </div>\r\n    );\r\n}\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addMessageWrapper\":\"SendMessage_addMessageWrapper__12S8A\",\"text\":\"SendMessage_text__1_Tlp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoWrapper\":\"ProfileInfo_profileInfoWrapper__2YYH_\",\"picture\":\"ProfileInfo_picture__1VNwQ\",\"info\":\"ProfileInfo_info__7TN-m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPostsWrapper\":\"Send_addPostsWrapper__MxuqL\",\"text\":\"Send_text__1Vz6E\",\"btn\":\"Send_btn__TXa5M\"};"],"sourceRoot":""}